[
  {
    "title": "Android1-Install-JDK-AndroidStudio-SDK",
    "code": "# Steps to Install and Configure JDK, Android Studio, and Android SDK\n\n1. **Install JDK**:\n   - Download JDK 11 or 17 from Oracle or OpenJDK.\n   - Follow the installer instructions for your OS (Windows, macOS, Linux).\n   - Set `JAVA_HOME` environment variable to the JDK installation path.\n   - Add `%JAVA_HOME%\\bin` (Windows) or `$JAVA_HOME/bin` (Linux/macOS) to `PATH`.\n\n2. **Install Android Studio**:\n   - Download Android Studio from `developer.android.com/studio`.\n   - Run the installer and follow prompts to install.\n   - Launch Android Studio and complete the setup wizard.\n\n3. **Configure Android SDK**:\n   - In Android Studio, go to `File > Settings > Appearance & Behavior > System Settings > Android SDK`.\n   - Install the desired SDK platforms (e.g., Android 14.0, API 34).\n   - Install SDK Tools (e.g., Android SDK Build-Tools, Platform-Tools).",
    "output": "JDK, Android Studio, and SDK installed and configured successfully."
  },
  {
    "title": "Android2-Configure-ADT-AVD",
    "code": "# Steps to Configure ADT Plug-in and Create AVD\n\n1. **Configure ADT Plug-in** (Note: ADT is outdated; modern Android Studio uses integrated tools):\n   - Ensure Android Studio is installed (ADT is no longer needed separately).\n   - Verify Android SDK tools are installed via `File > Settings > Android SDK`.\n\n2. **Create Android Virtual Device (AVD)**:\n   - In Android Studio, go to `Tools > Device Manager`.\n   - Click `Create Virtual Device`.\n   - Select a device (e.g., Pixel 6), choose a system image (e.g., Android 14, API 34), and download if needed.\n   - Configure AVD settings (e.g., RAM, storage) and click `Finish`.\n   - Launch the AVD from the Device Manager to test.",
    "output": "AVD created and running successfully in Android Studio."
  },
  {
    "title": "Android3-HelloWorld",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello World!\"\n        android:textSize=\"24sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n</androidx.constraintlayout.widget.ConstraintLayout>\n\npackage com.example.helloworld\n\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.helloworld.databinding.ActivityMainBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityMainBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityMainBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n    }\n}",
    "output": "Displays 'Hello World!' centered on the screen."
  },
  {
    "title": "Android4-Linear-Absolute-Layout",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Linear Layout\"\n        android:textSize=\"20sp\"\n        android:layout_gravity=\"center\" />\n    <FrameLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Absolute Layout (FrameLayout)\"\n            android:textSize=\"20sp\"\n            android:layout_marginLeft=\"50dp\"\n            android:layout_marginTop=\"100dp\" />\n    </FrameLayout>\n</LinearLayout>\n\npackage com.example.layouts\n\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.layouts.databinding.ActivityLinearAbsoluteBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityLinearAbsoluteBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityLinearAbsoluteBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n    }\n}",
    "output": "Displays 'Linear Layout' at the top and 'Absolute Layout (FrameLayout)' positioned at (50dp, 100dp)."
  },
  {
    "title": "Android5-Frame-Table-Layout",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n    <FrameLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Frame Layout\"\n            android:textSize=\"20sp\"\n            android:layout_gravity=\"center\" />\n    </FrameLayout>\n    <TableLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\">\n        <TableRow>\n            <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"Table Layout Row 1\"\n                android:textSize=\"20sp\" />\n        </TableRow>\n        <TableRow>\n            <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:text=\"Table Layout Row 2\"\n                android:textSize=\"20sp\" />\n        </TableRow>\n    </TableLayout>\n</LinearLayout>\n\npackage com.example.layouts\n\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.layouts.databinding.ActivityFrameTableBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityFrameTableBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityFrameTableBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n    }\n}",
    "output": "Displays 'Frame Layout' centered in a FrameLayout and two rows in a TableLayout below it."
  },
  {
    "title": "Android6-TextView-EditText",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Enter your name:\"\n        android:textSize=\"20sp\" />\n    <EditText\n        android:id=\"@+id/editText\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Type here\" />\n</LinearLayout>\n\npackage com.example.textdemo\n\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.textdemo.databinding.ActivityTextBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityTextBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityTextBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n    }\n}",
    "output": "Displays a TextView with 'Enter your name:' and an EditText below it for user input."
  },
  {
    "title": "Android7-Button-ImageButton-ToggleButton",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Click Me\" />\n    <ImageButton\n        android:id=\"@+id/imageButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:src=\"@android:drawable/ic_menu_camera\" />\n    <ToggleButton\n        android:id=\"@+id/toggleButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textOn=\"ON\"\n        android:textOff=\"OFF\" />\n</LinearLayout>\n\npackage com.example.buttondemo\n\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.buttondemo.databinding.ActivityButtonsBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityButtonsBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityButtonsBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n    }\n}",
    "output": "Displays a Button, an ImageButton with a camera icon, and a ToggleButton with ON/OFF states."
  },
  {
    "title": "Android8-Login-Window",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <EditText\n        android:id=\"@+id/username\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Username\" />\n    <EditText\n        android:id=\"@+id/password\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Password\"\n        android:inputType=\"textPassword\" />\n    <Button\n        android:id=\"@+id/loginButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Login\" />\n    <TextView\n        android:id=\"@+id/result\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"\" />\n</LinearLayout>\n\npackage com.example.logindemo\n\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.logindemo.databinding.ActivityLoginBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityLoginBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityLoginBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding.loginButton.setOnClickListener {\n            val username = binding.username.text.toString()\n            val password = binding.password.text.toString()\n            if (username == \"admin\" && password == \"password\") {\n                binding.result.text = \"Login Successful!\"\n            } else {\n                binding.result.text = \"Invalid Credentials!\"\n            }\n        }\n    }\n}",
    "output": "Displays a login form; shows 'Login Successful!' if username is 'admin' and password is 'password', else 'Invalid Credentials!'."
  },
  {
    "title": "Android9-Checkbox",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <CheckBox\n        android:id=\"@+id/checkbox\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"I agree to terms\" />\n    <TextView\n        android:id=\"@+id/result\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"\" />\n</LinearLayout>\n\npackage com.example.checkboxdemo\n\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.checkboxdemo.databinding.ActivityCheckboxBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityCheckboxBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityCheckboxBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding.checkbox.setOnCheckedChangeListener { _, isChecked ->\n            binding.result.text = if (isChecked) \"Checked!\" else \"Unchecked!\"\n        }\n    }\n}",
    "output": "Displays a checkbox; shows 'Checked!' when selected, 'Unchecked!' when deselected."
  },
  {
    "title": "Android10-RadioButton-RadioGroup",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <RadioGroup\n        android:id=\"@+id/radioGroup\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\">\n        <RadioButton\n            android:id=\"@+id/radioMale\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Male\" />\n        <RadioButton\n            android:id=\"@+id/radioFemale\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Female\" />\n    </RadioGroup>\n    <TextView\n        android:id=\"@+id/result\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"\" />\n</LinearLayout>\n\npackage com.example.radiodemo\n\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.radiodemo.databinding.ActivityRadioBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityRadioBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityRadioBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding.radioGroup.setOnCheckedChangeListener { _, checkedId ->\n            when (checkedId) {\n                R.id.radioMale -> binding.result.text = \"Selected: Male\"\n                R.id.radioFemale -> binding.result.text = \"Selected: Female\"\n            }\n        }\n    }\n}",
    "output": "Displays two radio buttons; shows 'Selected: Male' or 'Selected: Female' based on selection."
  },
  {
    "title": "Android11-ProgressBar",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <ProgressBar\n        android:id=\"@+id/progressBar\"\n        style=\"?android:attr/progressBarStyleHorizontal\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:max=\"100\"\n        android:progress=\"0\" />\n    <Button\n        android:id=\"@+id/startButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Start Progress\" />\n</LinearLayout>\n\npackage com.example.progressdemo\n\nimport android.os.Bundle\nimport android.os.Handler\nimport android.os.Looper\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.progressdemo.databinding.ActivityProgressBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityProgressBinding\n    private val handler = Handler(Looper.getMainLooper())\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityProgressBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding.startButton.setOnClickListener {\n            var progress = 0\n            handler.post(object : Runnable {\n                override fun run() {\n                    if (progress <= 100) {\n                        binding.progressBar.progress = progress\n                        progress += 10\n                        handler.postDelayed(this, 500)\n                    }\n                }\n            })\n        }\n    }\n}",
    "output": "Displays a progress bar that increments by 10% every 500ms when the button is clicked."
  },
  {
    "title": "Android12-ListView-GridView-ImageView-ScrollView",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        android:padding=\"16dp\">\n        <ImageView\n            android:id=\"@+id/imageView\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"200dp\"\n            android:src=\"@android:drawable/ic_menu_gallery\" />\n        <ListView\n            android:id=\"@+id/listView\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"200dp\" />\n        <GridView\n            android:id=\"@+id/gridView\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"200dp\"\n            android:numColumns=\"2\" />\n    </LinearLayout>\n</ScrollView>\n\npackage com.example.viewsdemo\n\nimport android.os.Bundle\nimport android.widget.ArrayAdapter\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.viewsdemo.databinding.ActivityViewsBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityViewsBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityViewsBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        val items = arrayOf(\"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\")\n        binding.listView.adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, items)\n        binding.gridView.adapter = ArrayAdapter(this, android.R.layout.simple_list_item_1, items)\n    }\n}",
    "output": "Displays an ImageView, a ListView with 4 items, and a GridView with 4 items in a 2-column layout, all scrollable."
  },
  {
    "title": "Android13-Bluetooth-Connectivity",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <Button\n        android:id=\"@+id/enableBluetooth\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Enable Bluetooth\" />\n    <TextView\n        android:id=\"@+id/status\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"\" />\n</LinearLayout>\n\npackage com.example.bluetoothdemo\n\nimport android.bluetooth.BluetoothAdapter\nimport android.content.Intent\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.bluetoothdemo.databinding.ActivityBluetoothBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityBluetoothBinding\n    private val bluetoothAdapter: BluetoothAdapter? = BluetoothAdapter.getDefaultAdapter()\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityBluetoothBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding.enableBluetooth.setOnClickListener {\n            if (bluetoothAdapter == null) {\n                binding.status.text = \"Bluetooth not supported\"\n            } else if (!bluetoothAdapter.isEnabled) {\n                startActivityForResult(Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE), 1)\n            } else {\n                binding.status.text = \"Bluetooth is enabled\"\n            }\n        }\n    }\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        if (requestCode == 1 && resultCode == RESULT_OK) {\n            binding.status.text = \"Bluetooth enabled successfully\"\n        }\n    }\n}\n\n<!-- Add to AndroidManifest.xml -->\n<uses-permission android:name=\"android.permission.BLUETOOTH\" />\n<uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />",
    "output": "Displays a button to enable Bluetooth; shows status messages like 'Bluetooth enabled successfully'."
  },
  {
    "title": "Android14-Animation",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <ImageView\n        android:id=\"@+id/imageView\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"100dp\"\n        android:src=\"@android:drawable/ic_menu_gallery\" />\n    <Button\n        android:id=\"@+id/animateButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Start Animation\" />\n</LinearLayout>\n\npackage com.example.animationdemo\n\nimport android.os.Bundle\nimport android.view.animation.AnimationUtils\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.animationdemo.databinding.ActivityAnimationBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityAnimationBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityAnimationBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding.animateButton.setOnClickListener {\n            val animation = AnimationUtils.loadAnimation(this, android.R.anim.fade_in)\n            binding.imageView.startAnimation(animation)\n        }\n    }\n}",
    "output": "Displays an ImageView and a button; clicking the button applies a fade-in animation to the ImageView."
  },
  {
    "title": "Android15-SQLite-AsyncTask",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <EditText\n        android:id=\"@+id/nameInput\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Enter name\" />\n    <Button\n        android:id=\"@+id/saveButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Save\" />\n    <TextView\n        android:id=\"@+id/result\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"\" />\n</LinearLayout>\n\npackage com.example.sqlitedemo\n\nimport android.content.ContentValues\nimport android.database.sqlite.SQLiteDatabase\nimport android.os.AsyncTask\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.sqlitedemo.databinding.ActivitySqliteBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivitySqliteBinding\n    private lateinit var dbHelper: DatabaseHelper\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivitySqliteBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n        dbHelper = DatabaseHelper(this)\n\n        binding.saveButton.setOnClickListener {\n            val name = binding.nameInput.text.toString()\n            SaveTask().execute(name)\n        }\n    }\n\n    private inner class SaveTask : AsyncTask<String, Void, String>() {\n        override fun doInBackground(vararg params: String): String {\n            val db = dbHelper.writableDatabase\n            val values = ContentValues().apply { put(\"name\", params[0]) }\n            db.insert(\"users\", null, values)\n            val cursor = db.query(\"users\", arrayOf(\"name\"), null, null, null, null, null)\n            val result = StringBuilder()\n            while (cursor.moveToNext()) {\n                result.append(cursor.getString(0)).append(\"\\n\")\n            }\n            cursor.close()\n            return result.toString()\n        }\n\n        override fun onPostExecute(result: String) {\n            binding.result.text = result\n        }\n    }\n}\n\nclass DatabaseHelper(context: android.content.Context) : android.database.sqlite.SQLiteOpenHelper(context, \"UserDB\", null, 1) {\n    override fun onCreate(db: SQLiteDatabase) {\n        db.execSQL(\"CREATE TABLE users (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT)\")\n    }\n\n    override fun onUpgrade(db: SQLiteDatabase, oldVersion: Int, newVersion: Int) {}\n}",
    "output": "Saves a name to SQLite and displays all names in the database."
  },
  {
    "title": "Android16-Send-Receive-SMS",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <EditText\n        android:id=\"@+id/phoneNumber\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Phone Number\"\n        android:inputType=\"phone\" />\n    <EditText\n        android:id=\"@+id/message\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Message\" />\n    <Button\n        android:id=\"@+id/sendButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Send SMS\" />\n    <TextView\n        android:id=\"@+id/receivedMessage\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"\" />\n</LinearLayout>\n\npackage com.example.smsdemo\n\nimport android.content.BroadcastReceiver\nimport android.content.Context\nimport android.content.Intent\nimport android.content.IntentFilter\nimport android.os.Bundle\nimport android.telephony.SmsManager\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.smsdemo.databinding.ActivitySmsBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivitySmsBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivitySmsBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding.sendButton.setOnClickListener {\n            val phone = binding.phoneNumber.text.toString()\n            val message = binding.message.text.toString()\n            SmsManager.getDefault().sendTextMessage(phone, null, message, null, null)\n        }\n\n        val receiver = object : BroadcastReceiver() {\n            override fun onReceive(context: Context, intent: Intent) {\n                val bundle = intent.extras\n                if (bundle != null) {\n                    val pdus = bundle.get(\"pdus\") as Array<*>\n                    for (pdu in pdus) {\n                        val sms = android.telephony.SmsMessage.createFromPdu(pdu as ByteArray)\n                        binding.receivedMessage.text = \"Received: ${sms.messageBody}\"\n                    }\n                }\n            }\n        }\n        registerReceiver(receiver, IntentFilter(\"android.provider.Telephony.SMS_RECEIVED\"))\n    }\n}\n\n<!-- Add to AndroidManifest.xml -->\n<uses-permission android:name=\"android.permission.SEND_SMS\" />\n<uses-permission android:name=\"android.permission.RECEIVE_SMS\" />",
    "output": "Allows sending an SMS and displays received SMS messages."
  },
  {
    "title": "Android17-Send-Receive-Email",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <EditText\n        android:id=\"@+id/recipient\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Recipient Email\"\n        android:inputType=\"textEmailAddress\" />\n    <EditText\n        android:id=\"@+id/subject\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Subject\" />\n    <EditText\n        android:id=\"@+id/body\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"Message\" />\n    <Button\n        android:id=\"@+id/sendButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Send Email\" />\n</LinearLayout>\n\npackage com.example.emaildemo\n\nimport android.content.Intent\nimport android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.emaildemo.databinding.ActivityEmailBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityEmailBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityEmailBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding.sendButton.setOnClickListener {\n            val intent = Intent(Intent.ACTION_SEND).apply {\n                type = \"message/rfc822\"\n                putExtra(Intent.EXTRA_EMAIL, arrayOf(binding.recipient.text.toString()))\n                putExtra(Intent.EXTRA_SUBJECT, binding.subject.text.toString())\n                putExtra(Intent.EXTRA_TEXT, binding.body.text.toString())\n            }\n            startActivity(Intent.createChooser(intent, \"Send Email\"))\n        }\n    }\n}",
    "output": "Opens an email client to send an email with the specified recipient, subject, and body."
  },
  {
    "title": "Android18-Camera",
    "code": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n    <ImageView\n        android:id=\"@+id/imageView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"200dp\"\n        android:contentDescription=\"Captured Image\" />\n    <Button\n        android:id=\"@+id/captureButton\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Capture Photo\" />\n</LinearLayout>\n\npackage com.example.camerademo\n\nimport android.content.Intent\nimport android.graphics.Bitmap\nimport android.os.Bundle\nimport android.provider.MediaStore\nimport androidx.appcompat.app.AppCompatActivity\nimport com.example.camerademo.databinding.ActivityCameraBinding\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityCameraBinding\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityCameraBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        binding.captureButton.setOnClickListener {\n            val intent = Intent(MediaStore.ACTION_IMAGE_CAPTURE)\n            startActivityForResult(intent, 1)\n        }\n    }\n\n    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {\n        super.onActivityResult(requestCode, resultCode, data)\n        if (requestCode == 1 && resultCode == RESULT_OK) {\n            val imageBitmap = data?.extras?.get(\"data\") as Bitmap\n            binding.imageView.setImageBitmap(imageBitmap)\n        }\n    }\n}\n\n<!-- Add to AndroidManifest.xml -->\n<uses-permission android:name=\"android.permission.CAMERA\" />",
    "output": "Opens the camera to take a photo and displays it in the ImageView."
  }
]
